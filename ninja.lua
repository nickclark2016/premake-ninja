--
-- ninja.lua
-- Common functions for writing Ninja build files.
-- (c) 2025 Nick Clark and the Premake project
--

	local p = premake
	local project = p.project

	p.modules.ninja = {}
	p.modules.ninja._VERSION = "0.0.1"

	local ninja = p.modules.ninja

	include "_preload.lua"
	include "ninja_cpp.lua"
	include "ninja_csharp.lua"
	include "ninja_utility.lua"
	include "ninja_workspace.lua"

--
-- Generates a header for a workspace or project.
--
-- @param tgt
--    The workspace or project object.
--
	function ninja.header(tgt)
		local kind = iif(tgt.project, "project", "workspace")
		_p('# Generated by Premake')

		local iscfg = tgt.shortname and true or false
		if iscfg then
			_p('# %s: %s (%s)', kind, tgt.project.name, tgt.shortname)
		else
			_p('# %s: %s', kind, tgt.name)
		end

		_p('')
	end

--
-- Escapes a string for use in a Ninja build file. Ninja uses $ as an escape. See https://ninja-build.org/manual.html#ref_lexer
--
-- @param value
--    The string to be escaped.
-- @return
--    The escaped string.
--
	function ninja.esc(value)
		value = value:gsub("%$", "$$") -- $ -> $$
		value = value:gsub(":", "$:") -- : -> $:
		value = value:gsub("\n", "$\n") -- \n -> $\n
		value = value:gsub(" ", "$ ") -- space -> $space
		return value
	end


--
-- Get the ninja file name for a workspace or project configuration. If this object is the only one writing to a location, use "build.ninja".
-- If more than one object is writing to the same location, use name + ".ninja" to avoid
--
-- @param this
--    The workspace or project object.
-- @param checkcfgs
--    Should the function check against project configurations
-- @return
--    The ninja file name.
--
	function ninja.getninjafilename(this, checkcfgs)
		local count = 0
		for wks in p.global.eachWorkspace() do
			if wks.location == this.location then
				count = count + 1
			end

			if checkcfgs then
				for _, prj in ipairs(wks.projects) do
					-- If this is a project, check against the project configurations
					for cfg in project.eachconfig(prj) do
						if cfg.location == this.location then
							count = count + 1
						end
					end
				end
			end
		end

		if count == 1 then
			return "build.ninja"
		else
			-- If this is a project, use the project name
			if this.project then
				return this.project.name .. '_' .. this.shortname .. ".ninja"
			else
				return this.name .. ".ninja"
			end
		end
	end


	return ninja
